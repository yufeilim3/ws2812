/*
   This file was generated automatically by the Mojo IDE version B1.3.6.
   Do not edit this file directly. Instead edit the original Lucid source.
   This is a temporary file and any changes made to it will be destroyed.
*/

module playercontrol_1 (
    input clk,
    output reg [3:0] out,
    input rst,
    input lb,
    input rb
  );
  
  
  
  wire [1-1:0] M_edge_detector_left_out;
  reg [1-1:0] M_edge_detector_left_in;
  edge_detector_8 edge_detector_left (
    .clk(clk),
    .in(M_edge_detector_left_in),
    .out(M_edge_detector_left_out)
  );
  wire [1-1:0] M_edge_detector_right_out;
  reg [1-1:0] M_edge_detector_right_in;
  edge_detector_8 edge_detector_right (
    .clk(clk),
    .in(M_edge_detector_right_in),
    .out(M_edge_detector_right_out)
  );
  wire [1-1:0] M_button_cond_left_out;
  reg [1-1:0] M_button_cond_left_in;
  button_conditioner_10 button_cond_left (
    .clk(clk),
    .in(M_button_cond_left_in),
    .out(M_button_cond_left_out)
  );
  wire [1-1:0] M_button_cond_right_out;
  reg [1-1:0] M_button_cond_right_in;
  button_conditioner_10 button_cond_right (
    .clk(clk),
    .in(M_button_cond_right_in),
    .out(M_button_cond_right_out)
  );
  reg [3:0] M_pos_d, M_pos_q = 1'h0;
  localparam GAMESTART_state = 2'd0;
  localparam CENTERSCREEN_state = 2'd1;
  localparam LEFTSCREEN_state = 2'd2;
  localparam RIGHTSCREEN_state = 2'd3;
  
  reg [1:0] M_state_d, M_state_q = GAMESTART_state;
  
  reg [3:0] alu_out;
  
  wire [1-1:0] M_myalu_z;
  wire [1-1:0] M_myalu_v;
  wire [1-1:0] M_myalu_n;
  wire [16-1:0] M_myalu_out;
  reg [16-1:0] M_myalu_a;
  reg [16-1:0] M_myalu_b;
  reg [6-1:0] M_myalu_alufn;
  alu16bit_17 myalu (
    .a(M_myalu_a),
    .b(M_myalu_b),
    .alufn(M_myalu_alufn),
    .z(M_myalu_z),
    .v(M_myalu_v),
    .n(M_myalu_n),
    .out(M_myalu_out)
  );
  
  always @* begin
    M_state_d = M_state_q;
    M_pos_d = M_pos_q;
    
    M_button_cond_left_in = lb;
    M_button_cond_right_in = rb;
    M_edge_detector_left_in = M_button_cond_left_out;
    M_edge_detector_right_in = M_button_cond_right_out;
    M_myalu_a = M_pos_q;
    M_myalu_b = 8'h00;
    M_myalu_alufn = 6'h00;
    alu_out = M_myalu_out[0+3-:4];
    
    case (M_state_q)
      GAMESTART_state: begin
        M_pos_d = 4'h0;
        M_state_d = LEFTSCREEN_state;
      end
      CENTERSCREEN_state: begin
        if (M_pos_q == 4'hc) begin
          if (M_edge_detector_left_out == 1'h1) begin
            M_myalu_a = M_pos_q;
            M_myalu_b = 8'h01;
            M_myalu_alufn = 6'h01;
            alu_out = M_myalu_out[0+3-:4];
            M_pos_d = alu_out;
            M_state_d = CENTERSCREEN_state;
          end
          if (M_edge_detector_right_out == 1'h1) begin
            M_myalu_a = M_pos_q;
            M_myalu_b = 8'h01;
            M_myalu_alufn = 6'h00;
            alu_out = M_myalu_out[0+3-:4];
            M_pos_d = alu_out;
            M_state_d = RIGHTSCREEN_state;
          end
        end else begin
          if (M_pos_q == 4'h1) begin
            if (M_edge_detector_left_out == 1'h1) begin
              M_myalu_a = M_pos_q;
              M_myalu_b = 8'h01;
              M_myalu_alufn = 6'h01;
              alu_out = M_myalu_out[0+3-:4];
              M_pos_d = alu_out;
              M_state_d = LEFTSCREEN_state;
            end
            if (M_edge_detector_right_out == 1'h1) begin
              M_myalu_a = M_pos_q;
              M_myalu_b = 8'h01;
              M_myalu_alufn = 6'h00;
              alu_out = M_myalu_out[0+3-:4];
              M_pos_d = alu_out;
              M_state_d = CENTERSCREEN_state;
            end
          end else begin
            if (M_edge_detector_left_out == 1'h1) begin
              M_myalu_a = M_pos_q;
              M_myalu_b = 8'h01;
              M_myalu_alufn = 6'h01;
              alu_out = M_myalu_out[0+3-:4];
              M_pos_d = alu_out;
              M_state_d = CENTERSCREEN_state;
            end
            if (M_edge_detector_right_out == 1'h1) begin
              M_myalu_a = M_pos_q;
              M_myalu_b = 8'h01;
              M_myalu_alufn = 6'h00;
              alu_out = M_myalu_out[0+3-:4];
              M_pos_d = alu_out;
              M_state_d = CENTERSCREEN_state;
            end
          end
        end
      end
      LEFTSCREEN_state: begin
        if (M_edge_detector_left_out == 1'h1) begin
          M_myalu_a = M_pos_q;
          M_myalu_b = 8'h00;
          M_myalu_alufn = 6'h1a;
          alu_out = M_myalu_out[0+3-:4];
          M_pos_d = alu_out;
          M_state_d = LEFTSCREEN_state;
        end
        if (M_edge_detector_right_out == 1'h1) begin
          M_myalu_a = M_pos_q;
          M_myalu_b = 8'h01;
          M_myalu_alufn = 6'h00;
          alu_out = M_myalu_out[0+3-:4];
          M_pos_d = alu_out;
          M_state_d = CENTERSCREEN_state;
        end
      end
      RIGHTSCREEN_state: begin
        if (M_edge_detector_left_out == 1'h1) begin
          M_myalu_a = M_pos_q;
          M_myalu_b = 8'h01;
          M_myalu_alufn = 6'h01;
          alu_out = M_myalu_out[0+3-:4];
          M_pos_d = alu_out;
          M_state_d = CENTERSCREEN_state;
        end
        if (M_edge_detector_right_out == 1'h1) begin
          M_myalu_a = M_pos_q;
          M_myalu_b = 8'h00;
          M_myalu_alufn = 6'h1a;
          alu_out = M_myalu_out[0+3-:4];
          M_pos_d = alu_out;
          M_state_d = RIGHTSCREEN_state;
        end
      end
    endcase
    out = alu_out;
  end
  
  always @(posedge clk) begin
    if (rst == 1'b1) begin
      M_pos_q <= 1'h0;
      M_state_q <= 1'h0;
    end else begin
      M_pos_q <= M_pos_d;
      M_state_q <= M_state_d;
    end
  end
  
endmodule
